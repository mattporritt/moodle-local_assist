{"version":3,"file":"tools.min.js","sources":["../src/tools.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to load and render the tools for the AI assist plugin.\n *\n * @module     local_assist/tools\n * @copyright  2023 Matt Porritt <matt.porritt@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery'; // Jquery is required for Bootstrap 4 poppers.\nimport Templates from 'core/templates';\nimport * as coreStr from 'core/str';\n\nlet startX = 0; // Global variable to store the start X position of the mouse.\nlet isPopoverInteraction = false; // Flag to track interaction with the popover\n\n/**\n * Check if the popover contains the target element.\n *\n * @param {HTMLElement} target The target element.\n * @returns {boolean} True if the popover contains the target element.\n */\nconst popoverContains = (target) => {\n    const popoverParent = document.getElementById('text-selection-popover');\n    if (popoverParent && popoverParent.nextElementSibling) {\n        const popoverElem = popoverParent.nextElementSibling;\n        return popoverElem && popoverElem.contains(target);\n    } else {\n        return false;\n    }\n};\n\n/**\n * Create the popover and load its content.\n *\n * @param {Event} event The mouseup event.\n * @returns {Promise<HTMLElement>} A promise that resolves with the popover element.\n */\nconst createPopover = async(event) => {\n    // Get popover content.\n    const popperContent = await Templates.render('local_assist/popover', {});\n\n    // Get popover title.\n    const popoverTitle = await coreStr.get_string('popover_title', 'local_assist');\n\n    // Calculate the position of the popover.\n    const endX = event.clientX; // X position at the end of selection.\n    const x = startX < endX ? endX : startX; // Use the smaller X position.\n    const y = event.clientY;\n\n    // Create the popover using vanilla JavaScript.\n    const popover = document.createElement('div');\n    popover.id = 'text-selection-popover';\n    popover.style.position = 'absolute';\n    popover.style.top = `${y}px`;\n    popover.style.left = `${x}px`;\n    document.body.appendChild(popover);\n\n    // Initialize the popover using Bootstrap (which still uses jQuery).\n    $(popover).popover({\n        placement: 'right',\n        content: popperContent,\n        title: popoverTitle,\n        html: true,\n        trigger: 'manual',\n        offset: '15, 0' // Adjusts the popover position.\n    });\n\n    return popover;\n};\n\n/**\n * Display the mini toolbar. With the selected text.\n *\n * @param {Event} event The mouseup event.\n */\nconst handleSelection = async(event) => {\n    if (!isPopoverInteraction) {\n        const selectedText = window.getSelection().toString().trim();\n        if (selectedText.length > 0) {\n            // Remove existing popover if any.\n            $('#text-selection-popover').popover('hide').remove();\n\n            // Create and show the popover.\n            const popoverObj = await createPopover(event);\n            $(popoverObj).popover('show');\n\n            // Add event listeners to the popover.\n            document.querySelectorAll('.tool-assist-options a').forEach((link) => {\n                link.addEventListener('click', (event) => {\n                    event.preventDefault(); // Prevents the default link behavior.\n                    isPopoverInteraction = true; // Set the flag when a link is clicked\n                    window.console.log('Link clicked:', link.id); // Logs the ID of the clicked link.\n                    // You can add more code here to handle the click event\n                });\n            });\n\n        } else {\n            $('#text-selection-popover').popover('hide').remove();\n        }\n    }\n};\n\n/**\n * Add listener to Shadow DOM.\n *\n * @param {HTMLElement} root The root element of the Shadow DOM.\n */\nconst addListenerToShadowDOM = (root)=> {\n    root.addEventListener('mouseup', handleSelection);\n};\n\n/**\n * Add listener to iFrame.\n *\n * @param {HTMLIFrameElement} iframe The iFrame element.\n */\nconst addListenerToIframe = (iframe) => {\n    const iframeDocument = iframe.contentDocument || iframe.contentWindow.document;\n    iframeDocument.addEventListener('mouseup', handleSelection);\n};\n\nexport const init = () => {\n    // Add listener to  Shadow DOM.\n    const shadowElements = document.querySelectorAll('*');\n    shadowElements.forEach(el => {\n        if (el.shadowRoot) {\n            addListenerToShadowDOM(el.shadowRoot);\n        }\n    });\n\n    // Add listener to  iFrames.\n    const iframes = document.querySelectorAll('iframe');\n    iframes.forEach(addListenerToIframe);\n\n    // Add listener to  main document.\n    document.addEventListener('mouseup', handleSelection);\n\n    // Track the start of text selection.\n    document.addEventListener('mousedown', (event) => {\n        if (popoverContains(event.target)) {\n            isPopoverInteraction = true;\n        } else {\n            startX = event.pageX; // Update startX only if not interacting with popover\n            isPopoverInteraction = false;\n        }\n    });\n\n    // Reset isPopoverInteraction when clicking outside the popover\n    document.addEventListener('click', (event) => {\n        if (!popoverContains(event.target)) {\n            isPopoverInteraction = false;\n        }\n    });\n};\n"],"names":["startX","isPopoverInteraction","popoverContains","target","popoverParent","document","getElementById","nextElementSibling","popoverElem","contains","handleSelection","async","window","getSelection","toString","trim","length","popover","remove","popoverObj","popperContent","Templates","render","popoverTitle","coreStr","get_string","endX","event","clientX","x","y","clientY","createElement","id","style","position","top","left","body","appendChild","placement","content","title","html","trigger","offset","createPopover","querySelectorAll","forEach","link","addEventListener","preventDefault","console","log","addListenerToIframe","iframe","contentDocument","contentWindow","el","shadowRoot","pageX"],"mappings":";;;;;;;00BA2BIA,OAAS,EACTC,sBAAuB,QAQrBC,gBAAmBC,eACfC,cAAgBC,SAASC,eAAe,6BAC1CF,eAAiBA,cAAcG,mBAAoB,OAC7CC,YAAcJ,cAAcG,0BAC3BC,aAAeA,YAAYC,SAASN,eAEpC,GAgDTO,gBAAkBC,MAAAA,YACfV,qBAAsB,IACFW,OAAOC,eAAeC,WAAWC,OACrCC,OAAS,EAAG,qBAEvB,2BAA2BC,QAAQ,QAAQC,eAGvCC,gBA9CIR,OAAAA,cAEZS,oBAAsBC,mBAAUC,OAAO,uBAAwB,IAG/DC,mBAAqBC,QAAQC,WAAW,gBAAiB,gBAGzDC,KAAOC,MAAMC,QACbC,EAAI7B,OAAS0B,KAAOA,KAAO1B,OAC3B8B,EAAIH,MAAMI,QAGVd,QAAUZ,SAAS2B,cAAc,cACvCf,QAAQgB,GAAK,yBACbhB,QAAQiB,MAAMC,SAAW,WACzBlB,QAAQiB,MAAME,cAASN,QACvBb,QAAQiB,MAAMG,eAAUR,QACxBxB,SAASiC,KAAKC,YAAYtB,6BAGxBA,SAASA,QAAQ,CACfuB,UAAW,QACXC,QAASrB,cACTsB,MAAOnB,aACPoB,MAAM,EACNC,QAAS,SACTC,OAAQ,UAGL5B,SAgB0B6B,CAAcnB,2BACrCR,YAAYF,QAAQ,QAGtBZ,SAAS0C,iBAAiB,0BAA0BC,SAASC,OACzDA,KAAKC,iBAAiB,SAAUvB,QAC5BA,MAAMwB,iBACNlD,sBAAuB,EACvBW,OAAOwC,QAAQC,IAAI,gBAAiBJ,KAAKhB,kCAM/C,2BAA2BhB,QAAQ,QAAQC,WAmBnDoC,oBAAuBC,UACFA,OAAOC,iBAAmBD,OAAOE,cAAcpD,UACvD6C,iBAAiB,UAAWxC,gCAG3B,KAEOL,SAAS0C,iBAAiB,KAClCC,SAAQU,KACfA,GAAGC,YACoBD,GAAGC,WAlB7BT,iBAAiB,UAAWxC,oBAuBjBL,SAAS0C,iBAAiB,UAClCC,QAAQM,qBAGhBjD,SAAS6C,iBAAiB,UAAWxC,iBAGrCL,SAAS6C,iBAAiB,aAAcvB,QAChCzB,gBAAgByB,MAAMxB,QACtBF,sBAAuB,GAEvBD,OAAS2B,MAAMiC,MACf3D,sBAAuB,MAK/BI,SAAS6C,iBAAiB,SAAUvB,QAC3BzB,gBAAgByB,MAAMxB,UACvBF,sBAAuB"}